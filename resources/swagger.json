{
  "swagger": "2.0",
  "info": {
    "description": "We are looking to build a money accounting application. We need a web application, which tracks money flow of a single user.",
    "version": "0.0.2",
    "title": "Accounting notebook"
  },
  "host": "localhost",
  "basePath": "/api",
  "tags": [
    {
      "name": "transactions",
      "description": "Transaction operations. There are 2 types of transaction: credit and debit. Credit transaction leads to the account balance growth. Debit transaction leads to the account balance reduction."
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "??": {
      "get": {
        "summary": "Fetches current account balance",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "2xx": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "?": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Fetches transactions history",
        "operationId": "transactionsHistory",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "2xx": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transaction"
              }
            }
          },
          "4xx": {
            "description": "invalid status value"
          }
        }
      },
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "Commit new transaction to the account",
        "operationId": "commitTransaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Transaction object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionBody"
            }
          }
        ],
        "responses": {
          "2xx": {
            "description": "transaction stored",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "4xx": {
            "description": "invalid input"
          }
        }
      }
    },
    "?/?": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Find transaction by ID",
        "description": "Returns a single transaction object",
        "operationId": "getTransactionById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "ID of transaction to return",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "2xx": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "4xx": {
            "description": "invalid ID supplied"
          },
          "4xy": {
            "description": "transaction not found"
          }
        }
      },
      "put": {
        "tags": [
          "transactions"
        ],
        "summary": "Not needed"
      },
      "patch": {
        "tags": [
          "transactions"
        ],
        "summary": "Not needed"
      },
      "delete": {
        "tags": [
          "transactions"
        ],
        "summary": "Not needed"
      }
    }
  },
  "definitions": {
    "TransactionBody": {
      "type": "object",
      "required": [
        "type",
        "amount"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "credit",
            "debit"
          ]
        },
        "amount": {
          "type": "number",
          "description": "Transaction numeric value. Incrementing or decrementing the account balance, based on the transaction type."
        }
      }
    },
    "Transaction": {
      "type": "object",
      "required": [
        "type",
        "amount"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "Unique transaction identifier, generated by the service, when the transaction is being stored."
        },
        "type": {
          "type": "string",
          "enum": [
            "credit",
            "debit"
          ]
        },
        "amount": {
          "type": "number",
          "description": "Transaction numeric value. Incrementing or decrementing the account balance, based on the transaction type."
        },
        "effectiveDate": {
          "type": "string",
          "format": "date-time",
          "description": "Effective date-time, generated by the service, when the transaction is being stored."
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Accounting",
    "url": "https://en.wikipedia.org/wiki/Debits_and_credits"
  }
}